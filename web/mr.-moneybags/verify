#!/usr/bin/exec-suid -- /usr/bin/python3 -I
import sys
sys.path.append('/challenge')


def print_flag():
    try:
        with open("/flag", "r") as f:
            text = f.read()
            # print(text)
            return text
    except FileNotFoundError:
        print("Error: Flag file not found.")

# Add your imports and other code below here
from flask import Flask, request, render_template, render_template_string, jsonify
from urllib.parse import quote, unquote
from pathlib import Path
import hashlib
import random
import secrets
import threading
import time
import requests 

app = Flask(__name__)

feedbackHead = '''<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Security Through Quantity</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background: #f0f0f0;
            font-family: sans-serif;
        }
        .container {
            display: grid;
            grid-template-columns: repeat(2, auto);
            gap: 10px;
            background: #fff;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        form {
            display: flex;
            gap: 5px;
        }
        input[type="text"] {
            padding: 5px;
            font-size: 14px;
        }
        input[type="submit"] {
            padding: 5px 10px;
            font-size: 14px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        input[type="submit"]:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body><h2>User feedback: </h2><br><p>'''

feedbackTail = '''</p></body>
</html>'''



def genSecret(length):
	return secrets.token_urlsafe(length)[:length]

@app.route('/get-secret', methods=['POST'])
def get_secret():
    return jsonify({'secret': secret})

@app.route('/feedbackUpdate', methods=['POST'])
def updateFeedback():
    global feedbackBody
    userFeedback = request.form["userFeedback"]
    feedbackBody = userFeedback
    return render_template("feedbackUpdated.html")

@app.route('/feedback', methods=['GET'])
def feedback():
    return render_template_string(feedbackHead+feedbackBody+feedbackTail)

@app.route('/', methods=['GET'])
def index():
    return render_template("feedbackIndex.html")


if __name__ == '__main__':  
    secret = genSecret(16)
    feedbackBody = ""
    app.run(debug=False, port=5000)



# Add your imports and other code below here


# -- main site where user can submit requests/"emails" to mr moneybags
# -- 2nd script has "mr moneybags" making a request to the user input page every once in a while. csrf vuln on the private site.
# any request coming from the private site needs to have secret token to prevent cheating